@startuml

package api {
  package withdraw {
    package form {
      package confirmation {
        class WithdrawalConfirmApplicationForm {
          + {static} Either<String, WithdrawalConfirmApplication> bind(String)
        }
      }
      package application {
        class WithdrawApplicationForm {
          + {static} Either<String, WithdrawApplication> bind(String)
        }
      }
    }
    class WithdrawalConfirmApplicationApi {
      + Either<String, WithdrawUser> apply(String)
    }
    class WithdrawApplicationApi {
      + Either<String, Unit> apply(String)
    }
    WithdrawalConfirmApplicationApi -up-> WithdrawalConfirmApplicationForm
    WithdrawApplicationApi -up-> WithdrawApplicationForm
  }
}

package service {
  class WithdrawalConfirmApplicationService {
    + Either<RejectReason, WithdrawUser> apply(WithdrawalConfirmApplication)
  }
  class WithdrawApplicationService {
    + WithdrawUser apply(WithdrawApplication)
  }
}
WithdrawalConfirmApplicationApi -down-> WithdrawalConfirmApplicationService
WithdrawApplicationApi -down-> WithdrawalConfirmApplicationService
WithdrawApplicationApi -down-> WithdrawApplicationService

@enduml